{
  "next_action": [
    {
      "type": "tool_use",
      "tool": "llm.generate",
      "input": {
        "prompt": "\nYou are a software collaborator with two roles:\n1. Assist in documenting testing outcomes.\n2. Support the engineering team by identifying what functionality needs fixing.\nThe test is already complete. You are provided with a test result JSON object named testResult.\nYour job is to **generate report files for user** based on the contents of testResult.\n---\nYou MUST perform the following:\n### Generate Markdown Report\n- Extract all the test cases from testCaseResults.\n- Use this data to generate a standardized **Markdown** test report.\n- Follow the structure of reportTemplate.\n- Use tool \"file.write\" to save this report as a file `testsprite_tests\\testsprite-mcp-test-report.md` in the project directory.\n\n---\nYou must include every test case from testResult, list them one by one.\n---\n### Start generating the following file contents now:\n The full markdown report content (for `testsprite-mcp-test-report.md}`)\n---\n## Markdown Report Format:\n{{ Refer to schema }}\n\nAdditional Requirements:\n- The report must strictly follow the template style grouping (each ### Requirement: has multiple #### Test), each case must be classified under the appropriate requirement.\n- The Description under each Requirement can be automatically generated by combining the component and description of the test case.\n- Cases that cannot be classified should form a separate Requirement.\n\nYou must strictly follow these principles:\n- Field placeholders: use N/A if field does not exist  \n- **Project Name:** Use the project root directory name as the project name (e.g., voiceAgent-jiangzhang). If a .git repository name is available, use that instead.\n- **Version:** Manually check package.json in the project root. If the file exists, extract the version field; otherwise, use N/A.\n- **Code Repo:** Use the project root directory name as the project name (e.g., voiceAgent-jiangzhang). If a .git repository name is available, use that instead.\n- **Date:** 2025-09-18 (IMPORTANT: you must use the exact date string here.)\n- **Prepared by:** TestSprite AI Team\n- **Test Results:** testsprite-mcp-test-report.md\n- **Test Error:** Test cases that have passed do not contain the Test Error field or N/A.\n ",
        "schema": "\n# TestSprite AI Testing Report(MCP)\n\n---\n\n## 1️⃣ Document Metadata\n- **Project Name:** {project name}\n- **Version:** {MAJOR.MINOR.PATCH}\n- **Date:** {YYYY-MM-DD}\n- **Prepared by:** TestSprite AI Team\n\n---\n\n## 2️⃣ Requirement Validation Summary\n\n### Requirement: User Login\n- **Description:** Supports email/password login with validation.\n\n#### Test 1\n- **Test ID:** TC001\n- **Test Name:** Validate correct login with valid credentials.\n- **Test Code:** [code_file](./TC001_Validate_correct_login_with_valid_credentials.py)\n- **Test Error:** \n- **Test Visualization and Result:**\n- **Status:** ✅ Passed\n- **Severity:** LOW\n- **Analysis / Findings:** Login works as expected for valid user credentials.\n---\n\n#### Test 2\n- **Test ID:** TC002\n- **Test Name:** Reject login with incorrect password.\n- **Test Code:** [code_file](./TC002_Reject_login_with_incorrect_password.py)\n- **Test Error:** \n- **Test Visualization and Result:**\n- **Status:** ✅ Passed\n- **Severity:** LOW\n- **Analysis / Findings:** Correct error message shown. No security issues found.\n\n---\n\n#### Test 3\n- **Test ID:** TC003\n- **Test Name:** Lock account after 5 failed attempts.\n- **Test Code:** [code_file](./TC003_Lock_account_after_5_failed_attempts.py)\n- **Test Error:** \n- **Test Visualization and Result:**\n- **Status:** ⚠️ Partial\n- **Severity:** LOW\n- **Analysis / Findings:** Lock occurs, but error message not displayed consistently. Suggest adding explicit UI feedback.\n\n---\n\n### Requirement: User Signup\n- **Description:** Allows signup, validates email format.\n\n#### Test 1\n- **Test ID:** TC004\n- **Test Name:** Successful signup with valid email and password.\n- **Test Code:** [code_file](./TC004_Successful_signup_with_valid_email_and_password.py)\n- **Test Error:** \n- **Test Visualization and Result:**\n- **Status:** ✅ Passed\n- **Severity:** LOW\n- **Analysis / Findings:** Signup works as expected. Welcome email sent.\n\n---\n\n#### Test 2\n- **Test ID:** TC005\n- **Test Name:** Reject signup with invalid email.\n- **Test Code:** [code_file](./TC005_Reject_signup_with_invalid_email.py)\n- **Test Error:** \n- **Test Visualization and Result:**\n- **Status:** ⚠️ Partial\n- **Severity:** LOW\n- **Analysis / Findings:** Invalid email accepted — regex validation missing in code. Suggest adding client-side and server-side validation.\n\n---\n\n### Requirement: Password Reset\n- **Description:** Allows password reset via email.\n- **Test:** N/A  \n- **Status:** ❌ Not Tested\n\n- **Analysis / Findings:** No test generated. Feature not implemented in codebase.\n\n---\n\n## 3️⃣ Coverage & Matching Metrics\n\n- 85% of product requirements tested** \n- 70% of tests passed** \n- **Key gaps / risks:**  \nExample:  \n> 85% of product requirements had at least one test generated.  \n> 70% of tests passed fully.  \n> Risks: No password reset implementation; signup form missing edge validation.\n\n| Requirement        | Total Tests | ✅ Passed | ⚠️ Partial | ❌ Failed |\n|--------------------|-------------|-----------|-------------|------------|\n| (e.g. User Login)  | (e.g. 3)    | (e.g. 1)  | (e.g. 0)    | (e.g. 2)   |\n| ...                | ...         | ...       | ...         | ...        |\n---\n",
        "testResult": [
          {
            "testCaseId": "TC001",
            "failureReason": "The test failed due to security validation errors during registration despite valid inputs. This likely stems from incorrect or missing API credentials or configuration in the authentication system causing the backend to reject sign-up requests with 400 errors. Additionally, frontend warnings about invalid watch sources suggest reactive data binding issues that may affect form state.",
            "component": "Frontend LoginForm and RegistrationForm using Clerk authentication service",
            "recommendation": "Verify and update Clerk API keys and environment configurations for the registration flow. Fix any Vue reactive source bindings to ensure form validation and watchers function correctly. Perform integration testing after fixing backend authorization to confirm confirmation emails are sent.",
            "severity": "High",
            "testCode": "[TC001_User_Registration_with_Email.py](./TC001_User_Registration_with_Email.py)",
            "testTitle": "User Registration with Email",
            "testStatus": "FAILED",
            "description": "Verify that a user can register successfully using email with validation and confirmation email received.",
            "testError": "Registration attempt failed due to security validation errors despite valid inputs. Unable to proceed with registration and email confirmation testing. Reporting issue and stopping task.\nBrowser Console Logs:\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagjoqxR9slttGgif7DZbBAw6:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/client/sign_ups?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&__clerk_db_jwt=dvb_32tagjoqxR9slttGgif7DZbBAw6:0:0)",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/a69702a7-3cf1-4004-82ae-3668565832c1"
          },
          {
            "testCaseId": "TC002",
            "failureReason": "The social login options are completely missing from all relevant pages, preventing users from registering or logging in using social providers. This indicates an incomplete or faulty frontend implementation for social login UI components or disabled backend OAuth integrations.",
            "component": "Frontend LoginForm and RegistrationForm - Social Login UI Component",
            "recommendation": "Implement or restore social login buttons and flows for all targeted providers on the frontend login and registration pages. Ensure OAuth client IDs and backend authentication handlers are correctly configured and integrated. Conduct end-to-end testing to verify social login flows.",
            "severity": "High",
            "testCode": "[TC002_User_Registration_with_Social_Login.py](./TC002_User_Registration_with_Social_Login.py)",
            "testTitle": "User Registration with Social Login",
            "testStatus": "FAILED",
            "description": "Ensure user can register and login via social login providers successfully.",
            "testError": "No social login options are available on the login or registration pages, nor on the homepage. The user cannot register or login via social login providers as requested. Task cannot be completed due to lack of social login functionality.\nBrowser Console Logs:\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagkfEm1YbUsgWHbZgU0l3e2l:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/79659205-6d5d-4b45-940b-169171d01716"
          },
          {
            "testCaseId": "TC003",
            "failureReason": "The test passed, showing that password strength validation and compromised password checks function correctly within the time limits. This confirms effective frontend validation and backend integration with compromised password databases.",
            "component": "Frontend Password Input Component with validation logic",
            "recommendation": "Confirm current checks are robust and consider adding user feedback improvements like real-time suggestions or enhanced UI elements for password strength. Maintain the integration with compromised password APIs and monitor performance.",
            "severity": "Low",
            "testCode": "[TC003_Password_Validation_and_Compromised_Detection.py](./TC003_Password_Validation_and_Compromised_Detection.py)",
            "testTitle": "Password Validation and Compromised Detection",
            "testStatus": "PASSED",
            "description": "Verify that password inputs are validated for strength and checked against compromised password database within 2 seconds.",
            "testError": "",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/a81a8d3e-a40d-4f23-a5dd-ee3ddb67c673"
          },
          {
            "testCaseId": "TC004",
            "failureReason": "The security settings page to enable MFA returned a 404 error, blocking access to MFA setup and enforcement functionalities. This indicates a broken or missing route/page on the frontend or incorrect backend endpoint routing for MFA features.",
            "component": "Frontend SecuritySettingsPage and MFA Setup Component",
            "recommendation": "Restore or fix the missing security settings page. Verify routing configurations and backend service availability for MFA endpoints. After resolving the broken page, retest MFA enablement and login enforcement flows to ensure full compliance.",
            "severity": "High",
            "testCode": "[TC004_Multi_Factor_Authentication_Setup_and_Enforcement.py](./TC004_Multi_Factor_Authentication_Setup_and_Enforcement.py)",
            "testTitle": "Multi-Factor Authentication Setup and Enforcement",
            "testStatus": "FAILED",
            "description": "Verify that users can enable MFA and are required to provide it on login.",
            "testError": "The security settings page required to enable MFA is not accessible due to a 404 error. Therefore, the task to verify MFA enablement and enforcement cannot be completed. Please fix the broken link or page to proceed with MFA testing.\nBrowser Console Logs:\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagkl4MM9guOmD2MPe6CBYq5n:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagkl4MM9guOmD2MPe6CBYq5n:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/d371dcf5-115a-499e-bd2c-8c4ae18f2203"
          },
          {
            "testCaseId": "TC005",
            "failureReason": "Although the frontend displays supported formats PDF, DOCX, and TXT, audio file support is missing. The file upload interface does not handle direct file path inputs, limiting automation capabilities. The preview feature is absent and upload size limit validations were not verified due to inability to upload files automatically.",
            "component": "Frontend DocumentUploadComponent",
            "recommendation": "Add support for audio file uploads in the UI and backend. Improve the upload interface to support automated file selection or alternative upload mechanisms compatible with automation tools. Implement and verify the preview feature and file size validations with error handling for unsupported formats.",
            "severity": "Medium",
            "testCode": "[TC005_Document_Upload_with_Supported_File_Types_and_Validation.py](./TC005_Document_Upload_with_Supported_File_Types_and_Validation.py)",
            "testTitle": "Document Upload with Supported File Types and Validation",
            "testStatus": "FAILED",
            "description": "Validate that users can upload PDF, DOCX, TXT, and audio files with size limits and preview feature.",
            "testError": "The task to validate that users can upload PDF, DOCX, TXT, and audio files with size limits and preview feature was not fully completed. We successfully logged in, navigated to the document upload interface, and confirmed supported formats are PDF, DOCX, and TXT. However, the interface does not show support for audio files. Attempts to upload files failed due to the upload area not supporting direct text input for file paths, and no alternative file upload method was available to automate the upload. No preview feature was observed during the test. Upload size limits and error handling for unsupported formats could not be verified. Therefore, the task is incomplete and requires manual intervention or improved automation support to fully validate the upload and preview features.\nBrowser Console Logs:\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagnUXlRlJOGhLcpPXRTCdwHz:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagnUXlRlJOGhLcpPXRTCdwHz:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] You may test your Stripe.js integration over HTTP. However, live Stripe.js integrations must use HTTPS. (at https://js.stripe.com/v3:0:697558)\n[ERROR] Failed to load resource: net::ERR_EMPTY_RESPONSE (at https://m.stripe.com/6:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <FileUpload onUploadComplete=fn<handleUploadComplete> > \n  at <Dashboard onVnodeUnmounted=fn<onVnodeUnmounted> ref=Ref< Proxy(Object) > > \n  at <RouterView> \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/9c8f8215-a693-4e7d-91c0-f3b021750940"
          },
          {
            "testCaseId": "TC006",
            "failureReason": "Testing stopped early due to user sign-up failure caused by security validation errors, preventing access to the document upload and AI summary generation functionality. Thus, the core tested scenario cannot be validated.",
            "component": "Frontend UserRegistration and AI SummaryGenerator Components",
            "recommendation": "Resolve the root cause of the user registration failure (likely related to frontend/backend authentication configuration and API errors). After successful user creation, re-execute AI summary generation tests to verify successful multi-model fallback and summary outputs.",
            "severity": "High",
            "testCode": "[TC006_AI_Summary_Generation_Success_Flow.py](./TC006_AI_Summary_Generation_Success_Flow.py)",
            "testTitle": "AI Summary Generation Success Flow",
            "testStatus": "FAILED",
            "description": "Verify successful generation of multiple summary types using OpenAI GPT-4 and fallback to Anthropic Claude if needed.",
            "testError": "Testing stopped due to sign-up failure caused by security validation error. Unable to proceed with document upload and summary generation tests. Issue reported for resolution.\nBrowser Console Logs:\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32taglxxMMOWXHZhxKfRNggeWlo:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/client/sign_ups?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&__clerk_db_jwt=dvb_32taglxxMMOWXHZhxKfRNggeWlo:0:0)",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/419cb717-2f8e-4abd-a722-8c1a1dbdda97"
          },
          {
            "testCaseId": "TC007",
            "failureReason": "While user login and dashboard access succeeded, crucial operations including document upload, summary generation, parameter adjustment, and regeneration were not performed. This incomplete flow prevents assessment of full functionality.",
            "component": "Frontend SummaryGenerationModule and DocumentUploadComponent",
            "recommendation": "Extend test automation to complete document upload and trigger summary generation. Add parameter adjustment and summary regeneration actions in the test. Verify outputs and system responses through all these steps.",
            "severity": "Medium",
            "testCode": "[TC007_Summary_Regeneration_and_Parameter_Adjustment.py](./TC007_Summary_Regeneration_and_Parameter_Adjustment.py)",
            "testTitle": "Summary Regeneration and Parameter Adjustment",
            "testStatus": "FAILED",
            "description": "Ensure user can regenerate summaries and adjust parameters after initial result.",
            "testError": "The user successfully logged in and reached the dashboard where the document upload modal is open and ready for file upload. However, the document upload itself, summary generation, parameter adjustment, and summary regeneration have not yet been performed. Therefore, the task is not fully finished.\nBrowser Console Logs:\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagt0n2tBy52DiRnmGm6NB2Xe:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/client/sign_ups?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&__clerk_db_jwt=dvb_32tagt0n2tBy52DiRnmGm6NB2Xe:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagt0n2tBy52DiRnmGm6NB2Xe:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagt0n2tBy52DiRnmGm6NB2Xe:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] You may test your Stripe.js integration over HTTP. However, live Stripe.js integrations must use HTTPS. (at https://js.stripe.com/v3:0:697558)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)\n[ERROR] Failed to load resource: net::ERR_EMPTY_RESPONSE (at https://m.stripe.com/6:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <FileUpload onUploadComplete=fn<handleUploadComplete> > \n  at <Dashboard onVnodeUnmounted=fn<onVnodeUnmounted> ref=Ref< Proxy(Object) > > \n  at <RouterView> \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/1f0292c6-8c4c-48d0-a6e6-8efb0605c82a"
          },
          {
            "testCaseId": "TC008",
            "failureReason": "Login failures with valid credentials prevented accessing export features. Without successful login, exporting summaries in any format cannot be tested, thus blocking verification of format fidelity and metadata preservation.",
            "component": "Frontend ExportSummaryModule and Authentication Module",
            "recommendation": "Investigate and fix authentication issues causing valid login failures, ensuring user sessions can be established. After login is restored, proceed to validate export functionality across all supported formats with correctness and performance.",
            "severity": "High",
            "testCode": "[TC008_Export_Summary_in_Multiple_Formats.py](./TC008_Export_Summary_in_Multiple_Formats.py)",
            "testTitle": "Export Summary in Multiple Formats",
            "testStatus": "FAILED",
            "description": "Validate exporting summaries in Word, Excel, PowerPoint, PDF, Markdown, Notion, Trello, and HTML email formats preserves formatting and metadata within 10 seconds.",
            "testError": "Login failed repeatedly with valid credentials, preventing access to export features. Reported the issue and stopped further testing as login is essential for the task.\nBrowser Console Logs:\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagtMhf3ip6cDmPsYK6EslPnr:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagtMhf3ip6cDmPsYK6EslPnr:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/1bb0d4c0-b08c-4590-87b1-8a137ec481fb"
          },
          {
            "testCaseId": "TC009",
            "failureReason": "Although login as Free plan user and navigation occurred, automatic file upload was not achievable due to environmental test constraints. Consequently, usage limits enforcement and notification triggers for exceeding limits could not be validated, making the test only partially completed.",
            "component": "Frontend SubscriptionPlanModule and DocumentUploadComponent",
            "recommendation": "Provide automation capabilities or manual testing instructions to upload files and trigger usage limits. Validate restriction enforcement and notification display when limits are hit. Test plan upgrade flow with enlarged quotas afterward.",
            "severity": "Medium",
            "testCode": "[TC009_Subscription_Plan_Limits_Enforcement.py](./TC009_Subscription_Plan_Limits_Enforcement.py)",
            "testTitle": "Subscription Plan Limits Enforcement",
            "testStatus": "FAILED",
            "description": "Verify usage limits and upload size restrictions are enforced per subscription plan with notifications on limit reached.",
            "testError": "The user successfully logged in as a Free plan user and navigated to the Dashboard. The document upload modal was opened, showing the drag-and-drop area for supported file formats (PDF, DOCX, TXT). However, due to environment limitations, automated file upload could not be performed to test the usage limits and upload size restrictions. Therefore, it was not possible to verify the system's behavior when the Free plan usage limit is exceeded or to confirm the display of limit reached notifications. Also, the upgrade plan step and verification of increased limits were not performed. The task is partially completed with login and navigation verified, but the core functionality of usage limit enforcement and notifications remains untested in this session.\nBrowser Console Logs:\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagt3yYNksEFKdy9B65EYKOMI:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagt3yYNksEFKdy9B65EYKOMI:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] You may test your Stripe.js integration over HTTP. However, live Stripe.js integrations must use HTTPS. (at https://js.stripe.com/v3:0:697558)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)\n[ERROR] Failed to load resource: net::ERR_EMPTY_RESPONSE (at https://m.stripe.com/6:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <FileUpload onUploadComplete=fn<handleUploadComplete> > \n  at <Dashboard onVnodeUnmounted=fn<onVnodeUnmounted> ref=Ref< Proxy(Object) > > \n  at <RouterView> \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/3f7c0927-3da7-4f15-89c8-b71d0e7a773f"
          },
          {
            "testCaseId": "TC010",
            "failureReason": "Plan upgrade and payment testing were blocked by malfunction of the 'Alterar Plano' button, preventing submission of upgrade requests and payment processing.",
            "component": "Frontend PaymentProcessingModule and SubscriptionUpgradeComponent",
            "recommendation": "Debug and fix the functionality of the 'Alterar Plano' button to correctly trigger payment and plan upgrade workflows. Validate Stripe integration and handle errors gracefully. Follow with end-to-end payment and upgrade flow testing.",
            "severity": "High",
            "testCode": "[TC010_Payment_Processing_and_Subscription_Upgrade.py](./TC010_Payment_Processing_and_Subscription_Upgrade.py)",
            "testTitle": "Payment Processing and Subscription Upgrade",
            "testStatus": "FAILED",
            "description": "Validate subscription payments via Stripe and successful upgrade of user plan.",
            "testError": "Testing stopped due to 'Alterar Plano' button malfunction preventing plan upgrade and payment testing. Issue reported for resolution.\nBrowser Console Logs:\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagjysNiBx60Q86uzwIcAZLmF:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagjysNiBx60Q86uzwIcAZLmF:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] You may test your Stripe.js integration over HTTP. However, live Stripe.js integrations must use HTTPS. (at https://js.stripe.com/v3:0:697558)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)\n[ERROR] Failed to load resource: net::ERR_EMPTY_RESPONSE (at https://m.stripe.com/6:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/568a2f55-d767-4ead-8f55-d98502c52b54"
          },
          {
            "testCaseId": "TC011",
            "failureReason": "Critical system monitoring features such as system status page and load testing controls are missing, preventing simulation and measurement of backend API response times and uptime. Additionally, server errors and resource load failures indicate backend instability.",
            "component": "Backend API /api/test/load and System Monitoring Services",
            "recommendation": "Implement or restore system monitoring and load test simulation features. Fix backend stability issues causing 500 and 429 errors. Once monitoring tools are functional, perform comprehensive response time and uptime testing.",
            "severity": "High",
            "testCode": "[TC011_API_Backend_Response_Time_and_Uptime.py](./TC011_API_Backend_Response_Time_and_Uptime.py)",
            "testTitle": "API Backend Response Time and Uptime",
            "testStatus": "FAILED",
            "description": "Ensure backend API response time is under 500ms at 95th percentile and system uptime is above 99.5%.",
            "testError": "Reported the missing system monitoring status page and lack of load simulation controls. Cannot proceed further with the task due to these critical missing features. Task stopped.\nBrowser Console Logs:\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagtdVDcKKWJtklp8ZTNcaxOe:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[ERROR] Failed to load resource: the server responded with a status of 500 (Internal Server Error) (at http://localhost:3018/api/test/load:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 429 () (at https://www.google.com/sorry/index?continue=https://www.google.com/search%3Fq%3Dsimulate%25201000%2520API%2520requests%2520typical%2520load%2520localhost:3018/api/test/load%26udm%3D14%26sei%3Dk6bMaMaxDtfNseMP2Oa4gQw&q=EhAoBAFNMrNktHmWdlxpNfD4GJTNssYGIjDjtHMiQCRlXMVlgVInwb1vfHC-l5WLeFUyTzBzaNkA18zzNRzhgMWG1-Cvmen1X7cyAVJaAUM:0:0)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at https://www.google.com/recaptcha/enterprise/anchor?ar=1&k=6LdLLIMbAAAAAIl-KLj9p1ePhM-4LCCDbjtJLqRO&co=aHR0cHM6Ly93d3cuZ29vZ2xlLmNvbTo0NDM.&hl=en&v=44LqIOwVrGhp2lJ3fODa493O&size=normal&s=m7cA_pE7ml0-jGafP8HBh5NDr9wI6WWmjstwKfR1Oo8Ae7gzbpzwMM8vRzIjt4bXFLDrl-w-4vHYL7LXR58JuDyUtV2Kt25EfdeYRV5t573SAhjjbpMPUza8pd5Ujm4LBSht917GfsQtsCeFVRJFgb4scIjw5KHWvzOZkxM4cKWOZ95N38t3aceBSh-f7179h4Dvjpt_V8nOOkcUTLqvfHEWvT-xmhzANZvasEMPcSkarLgLiUxRltGyD_GSrjtsxEPGawHEmsQzulE2bIhfNfSqnx5vh4I&anchor-ms=20000&execute-ms=15000&cb=vjm2l23hemh3:0:0)\n[WARNING] An iframe which has both allow-scripts and allow-same-origin for its sandbox attribute can escape its sandboxing. (at https://www.google.com/recaptcha/enterprise/bframe?hl=en&v=44LqIOwVrGhp2lJ3fODa493O&k=6LdLLIMbAAAAAIl-KLj9p1ePhM-4LCCDbjtJLqRO&bft=0dAFcWeA65TyoraPFTyjS74Gp7udZhBdrV2m4UOwqGjhvM8UlBwX2nO0UKy7q6Oj7KrCHEdhLKWAGyTLEpDVnUGpfrRtWlHVqlUQ:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 500 (Internal Server Error) (at http://localhost:3018/api/test/load:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagtdVDcKKWJtklp8ZTNcaxOe:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/e31ca0e8-1a83-4c48-a284-2369314fbd5b"
          },
          {
            "testCaseId": "TC012",
            "failureReason": "Critical navigation issues after registration failure resulted in redirections to 404 error pages, making consent and data deletion verification inaccessible. Privacy settings and login functionalities are also blocked.",
            "component": "Frontend UserConsentModule and PrivacySettingsComponent",
            "recommendation": "Resolve registration and navigation issues preventing access to critical privacy-related pages. Validate LGPD compliance flows including explicit consent capturing and user-initiated data deletion requests after access is restored.",
            "severity": "High",
            "testCode": "[TC012_LGPD_Compliance_Consent_and_Data_Deletion.py](./TC012_LGPD_Compliance_Consent_and_Data_Deletion.py)",
            "testTitle": "LGPD Compliance: Consent and Data Deletion",
            "testStatus": "FAILED",
            "description": "Verify explicit user consent is required and user can request data deletion in compliance with LGPD.",
            "testError": "Testing stopped due to critical navigation issue. Unable to verify explicit user consent and data deletion request compliance with LGPD because the site navigated to a 404 error page after registration failure, and login or privacy settings are inaccessible. Please fix the navigation and registration flow to allow further testing.\nBrowser Console Logs:\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagpMyQeM2GqQTo1p56idS7qz:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/client/sign_ups?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&__clerk_db_jwt=dvb_32tagpMyQeM2GqQTo1p56idS7qz:0:0)",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/e655f453-71ec-4d83-8105-634d95b0fe6a"
          },
          {
            "testCaseId": "TC013",
            "failureReason": "The test passed, confirming that drag & drop functionality for document upload works correctly with proper visual feedback and error handling in the UI component.",
            "component": "Frontend DragDropUploadComponent",
            "recommendation": "Maintain current drag & drop functionality. Consider enhancing accessibility and mobile responsiveness. Add extended edge-case testing for diverse file types, large files, and error scenarios.",
            "severity": "Low",
            "testCode": "[TC013_Drag__Drop_Document_Upload_UI_Interaction.py](./TC013_Drag__Drop_Document_Upload_UI_Interaction.py)",
            "testTitle": "Drag & Drop Document Upload UI Interaction",
            "testStatus": "PASSED",
            "description": "Validate drag and drop functionality for document upload including visual feedback and error handling.",
            "testError": "",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/5a13f6b4-f261-49ce-ad4a-1cd1ffb16792"
          },
          {
            "testCaseId": "TC014",
            "failureReason": "Switching the UI language to Portuguese works as expected, but switching back to English does not update UI text, leaving it in Portuguese. This indicates a broken or incomplete dynamic language switching implementation, causing partial multilingual support failure.",
            "component": "Frontend Internationalization (i18n) Module and LanguageSwitchComponent",
            "recommendation": "Fix the language switch mechanism to correctly update UI strings on switching to English. Ensure language resource loading and reactive UI updates are correctly implemented. Retest dynamic language switching across all languages supported.",
            "severity": "Medium",
            "testCode": "[TC014_Multi_language_UI_and_Notification_Verification.py](./TC014_Multi_language_UI_and_Notification_Verification.py)",
            "testTitle": "Multi-language UI and Notification Verification",
            "testStatus": "FAILED",
            "description": "Ensure the interface and notifications correctly support Portuguese and English languages and can be switched dynamically.",
            "testError": "The UI language switch to Portuguese works correctly and UI elements display in Portuguese as expected. However, switching the UI language to English does not update the UI text, which remains in Portuguese. This is a critical issue preventing full verification of dynamic language switching. Further testing is stopped until this issue is resolved.\nBrowser Console Logs:\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagoRBTYD8L4Ip5wIxZMmDzh4:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/84e20dee-476a-41c4-8858-03766d8161e2"
          },
          {
            "testCaseId": "TC015",
            "failureReason": "Though user login, dashboard access, and profile viewing/edit modal opening succeeded, the profile picture upload button does not function, blocking further profile editing testing.",
            "component": "Frontend UserProfileComponent - Picture Upload Feature",
            "recommendation": "Investigate the upload button functionality, including UI event handlers and backend upload endpoints. Fix any frontend/backend integration issues. Validate profile picture upload and update workflows thoroughly.",
            "severity": "Medium",
            "testCode": "[TC015_User_Profile_and_Plan_Management.py](./TC015_User_Profile_and_Plan_Management.py)",
            "testTitle": "User Profile and Plan Management",
            "testStatus": "FAILED",
            "description": "Verify user can view and edit profile details, view current subscription plan, and access usage history from dashboard.",
            "testError": "Testing stopped due to the profile picture upload button not functioning as expected. User login, dashboard access, profile viewing, and opening edit modal were successful. However, the inability to upload a new profile picture prevents further testing of profile editing. Please investigate and fix the upload functionality.\nBrowser Console Logs:\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagtqVm2eA83JUOEivIOD9MT5:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagtqVm2eA83JUOEivIOD9MT5:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] You may test your Stripe.js integration over HTTP. However, live Stripe.js integrations must use HTTPS. (at https://js.stripe.com/v3:0:697558)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)\n[ERROR] Failed to load resource: net::ERR_EMPTY_RESPONSE (at https://m.stripe.com/6:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagtqVm2eA83JUOEivIOD9MT5:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/3b4dc49d-c46f-4099-87e6-7d940317dcd8"
          },
          {
            "testCaseId": "TC016",
            "failureReason": "Test passed showing successful audio file uploads and AI transcription processing with accurate text extraction, confirming end-to-end flow works including frontend upload and backend AI transcription service",
            "component": "Frontend AudioUploadComponent and AI Transcription Service Integration",
            "recommendation": "Confirm continued stability and accuracy of transcription. Consider expanding supported audio formats and adding real-time transcription feedback. Monitor latency and error cases.",
            "severity": "Low",
            "testCode": "[TC016_Audio_Document_Transcription_Processing.py](./TC016_Audio_Document_Transcription_Processing.py)",
            "testTitle": "Audio Document Transcription Processing",
            "testStatus": "PASSED",
            "description": "Test uploading audio files and successful transcription by AI with accurate text extraction.",
            "testError": "",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/e5cac1a4-c72c-44e1-983e-e69a9c46f143"
          },
          {
            "testCaseId": "TC017",
            "failureReason": "Test was only partially completed: login and navigation succeeded but inability to simulate AI providers downtime and absence of document upload prevented verification of error handling and user feedback when AI services are unavailable.",
            "component": "Frontend SummaryGenerationModule and Backend AI Providers (OpenAI GPT-4, Anthropic Claude)",
            "recommendation": "Implement backend or network-level controls to simulate AI service downtime in test environments. Automate document upload and summary generation triggers. Verify error messages and retry UI prompts work as intended under AI outage scenarios.",
            "severity": "Medium",
            "testCode": "[TC017_Error_Handling_AI_Service_Downtime.py](./TC017_Error_Handling_AI_Service_Downtime.py)",
            "testTitle": "Error Handling: AI Service Downtime",
            "testStatus": "FAILED",
            "description": "Verify system behavior and user feedback when both AI providers are unavailable.",
            "testError": "The task to verify system behavior and user feedback when both AI providers are unavailable is partially completed. User login and navigation to the dashboard were successful, and the document upload modal was opened. However, simulating the downtime of OpenAI GPT-4 and Anthropic Claude services was not possible through the UI, and no document was uploaded to trigger summary generation. Therefore, the critical verification of the informative error message with retry suggestion when both AI providers are down could not be performed. Further backend or network-level intervention is required to simulate AI provider downtime and fully complete this test.\nBrowser Console Logs:\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagu4ftY98mSTmdBjv0cxtOTi:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagu4ftY98mSTmdBjv0cxtOTi:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[ERROR] Failed to load resource: net::ERR_EMPTY_RESPONSE (at http://localhost:3018/src/views/NotFound.vue:0:0)\n[WARNING] [Vue Router warn]: uncaught error during route navigation: (at http://localhost:3018/node_modules/.vite/deps/vue-router.js?v=2ba19e45:48:15)\n[ERROR] TypeError: Failed to fetch dynamically imported module: http://localhost:3018/src/views/NotFound.vue (at http://localhost:3018/node_modules/.vite/deps/vue-router.js?v=2ba19e45:2617:14)\n[WARNING] You may test your Stripe.js integration over HTTP. However, live Stripe.js integrations must use HTTPS. (at https://js.stripe.com/v3:0:697558)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)\n[ERROR] Failed to load resource: net::ERR_EMPTY_RESPONSE (at https://m.stripe.com/6:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <FileUpload onUploadComplete=fn<handleUploadComplete> > \n  at <Dashboard onVnodeUnmounted=fn<onVnodeUnmounted> ref=Ref< Proxy(Object) > > \n  at <RouterView> \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://r.stripe.com/b:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <FileUpload onUploadComplete=fn<handleUploadComplete> > \n  at <Dashboard onVnodeUnmounted=fn<onVnodeUnmounted> ref=Ref< Proxy(Object) > > \n  at <RouterView> \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/618b3325-b2f8-4dcd-9dbe-dccb0e9206eb"
          },
          {
            "testCaseId": "TC018",
            "failureReason": "Login failure stopped testing before access to user data backup and recovery functionality, preventing any verification of backup restoration after incidents.",
            "component": "Frontend UserAuthenticationModule and Backend BackupRecoveryService",
            "recommendation": "Resolve login/authentication problems blocking access. Once fixed, design and perform end-to-end backup and recovery tests verifying user data restoration correctness and timeliness.",
            "severity": "High",
            "testCode": "[TC018_Recovery_Process_Backup_and_Data_Restoration.py](./TC018_Recovery_Process_Backup_and_Data_Restoration.py)",
            "testTitle": "Recovery Process: Backup and Data Restoration",
            "testStatus": "FAILED",
            "description": "Verify that backup and recovery policies successfully restore user data after incident.",
            "testError": "Login failure prevents access to user data and backup recovery features. Unable to proceed with backup and recovery testing due to authentication issue. Please verify login functionality to continue.\nBrowser Console Logs:\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagjss8sHFJTO3lUxfJBbwjBt:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. \n  at <AppHeader key=1 > \n  at <App> (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)\n[WARNING] Clerk: Clerk has been loaded with development keys. Development instances have strict usage limits and should not be used when deploying your application to production. Learn more: https://clerk.com/docs/deployments/overview (at https://causal-salmon-4.clerk.accounts.dev/npm/@clerk/clerk-js@5/dist/clerk.browser.js:15:1279)\n[ERROR] Failed to load resource: the server responded with a status of 400 () (at https://causal-salmon-4.clerk.accounts.dev/v1/environment?__clerk_api_version=2025-04-10&_clerk_js_version=5.94.0&_method=PATCH&__clerk_db_jwt=dvb_32tagjss8sHFJTO3lUxfJBbwjBt:0:0)\n[WARNING] [Vue warn]: Invalid watch source:  undefined A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types. (at http://localhost:3018/node_modules/.vite/deps/chunk-Q3UG47YJ.js?v=2ba19e45:2147:12)",
            "testVisualizationAndResult": "https://www.testsprite.com/dashboard/mcp/tests/81fe2b4d-dd53-4d09-a3f8-e03d00cde308/72732a1b-de87-416d-b547-7a2b25da6866"
          }
        ]
      }
    }
  ]
}
